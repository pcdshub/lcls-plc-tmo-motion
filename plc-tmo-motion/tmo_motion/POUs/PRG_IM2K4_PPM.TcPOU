<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="PRG_IM2K4_PPM" Id="{ba5f0424-d340-4eff-ab23-3e63bc2d0678}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PRG_IM2K4_PPM
VAR
    {attribute 'pytmc' := '
        pv: IM2K4:PPM
        io: io
    '}
    {attribute 'TcLinkTo' := '.fbGige.iIlluminatorINT := TIIB[IM2K4-EL4004-E7]^AO Outputs Channel 1^Analog output;
                              .fbGige.bGigePower := TIIB[IM2K4-EL2004-E3]^Channel 2^Output;
                              .fbPowerMeter.iVoltageINT := TIIB[IM2K4-EL3062-E6]^AI Standard Channel 1^Value;
                              .fbPowerMeter.fbTempSensor.bError := TIIB[IM2K4-EL3314-E4]^TC Inputs Channel 1^Status^Error;
                              .fbPowerMeter.fbTempSensor.bUnderrange := TIIB[IM2K4-EL3314-E4]^TC Inputs Channel 1^Status^Underrange;
                              .fbPowerMeter.fbTempSensor.bOverrange := TIIB[IM2K4-EL3314-E4]^TC Inputs Channel 1^Status^Overrange;
                              .fbPowerMeter.fbTempSensor.iRaw := TIIB[IM2K4-EL3314-E4]^TC Inputs Channel 1^Value;
                              .fbYagTempSensor.bError := TIIB[IM2K4-EL3314-E4]^TC Inputs Channel 2^Status^Error;
                              .fbYagTempSensor.bUnderrange := TIIB[IM2K4-EL3314-E4]^TC Inputs Channel 2^Status^Underrange;
                              .fbYagTempSensor.bOverrange := TIIB[IM2K4-EL3314-E4]^TC Inputs Channel 2^Status^Overrange;
                              .fbYagTempSensor.iRaw := TIIB[IM2K4-EL3314-E4]^TC Inputs Channel 2^Value;
                              .fbFlowSwitch.bFlowOk := TIIB[IM2K4-EL1004-E8]^Channel 1^Input'}
    fbIM2K4: FB_PPM;
//    fStartupVelo: LREAL := 13;
    fbStateSetup: FB_StateSetupHelper;
    stDefault: ST_PositionState :=(
        fVelocity := 13,
        bMoveOK := TRUE,
        bValid := TRUE
    );
//    bInit: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[fbStateSetup(StPositionState:=stDefault, bSetDefault:=TRUE);

fbStateSetup(StPositionState:=fbIM2K4.stOut, fposition:=-8.59, sPmpsState := 'IM2K4:PPM-OUT');
fbStateSetup(StPositionState:=fbIM2K4.stPower, fposition:=-47.69, sPmpsState := 'IM2K4:PPM-POWERMETER');
fbStateSetup(StPositionState:=fbIM2K4.stYag1, fposition:=-71.69, sPmpsState := 'IM2K4:PPM-YAG1');
fbStateSetup(StPositionState:=fbIM2K4.stYag2, fposition:=-97.70, sPmpsState := 'IM2K4:PPM-YAG2');


{*
//fbIM2K4.stOut.fPosition := -8.59;
fbIM2K4.stOut.fVelocity := fStartupVelo;
fbIM2K4.stOut.bUseRawCounts := FALSE;
fbIM2K4.stOut.bValid := TRUE;
fbIM2K4.stOut.bMoveOk := TRUE;
fbIM2K4.stOut.stPMPS.sPmpsState := 'IM2K4:PPM-OUT';

//fbIM2K4.stPower.fPosition := -47.69;
fbIM2K4.stPower.fVelocity := fStartupVelo;
fbIM2K4.stPower.bUseRawCounts := FALSE;
fbIM2K4.stPower.bValid := TRUE;
fbIM2K4.stPower.bMoveOk := TRUE;
fbIM2K4.stPower.stPMPS.sPmpsState := 'IM2K4:PPM-POWERMETER';

//fbIM2K4.stYag1.fPosition := -71.69;
fbIM2K4.stYag1.fVelocity := fStartupVelo;
fbIM2K4.stYag1.bUseRawCounts := FALSE;
fbIM2K4.stYag1.bValid := TRUE;
fbIM2K4.stYag1.bMoveOk := TRUE;
fbIM2K4.stYag1.stPMPS.sPmpsState := 'IM2K4:PPM-YAG1';

//fbIM2K4.stYag2.fPosition := -97.70;
fbIM2K4.stYag2.fVelocity := fStartupVelo;
fbIM2K4.stYag2.bUseRawCounts := FALSE;
fbIM2K4.stYag2.bValid := TRUE;
fbIM2K4.stYag2.bMoveOk := TRUE;
fbIM2K4.stYag2.stPMPS.sPmpsState := 'IM2K4:PPM-YAG2';

IF NOT bInit THEN
   bInit := TRUE;
   fbIM2K4.stOut.fPosition := -8.59;
   fbIM2K4.stPower.fPosition := -47.69;
   fbIM2K4.stYag1.fPosition := -71.69;
   fbIM2K4.stYag2.fPosition := -97.70;

END_IF
*}


fbIM2K4(
    fbArbiter := fbArbiter,
    fbFFHWO := fbFastFaultOutput1,
    stYStage := Main.M9,
    sDeviceName := 'IM2K4:PPM',
    sTransitionKey := 'IM2K4:PPM-TRANSITION',
    bEnableMotion := TRUE,
    bEnableBeamParams := TRUE,
    bEnablePositionLimits := TRUE,
    fResponsivity := 0.0712,
);]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>