<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="PRG_SP1K4" Id="{cb7a4ca3-c4c8-4f3d-892b-f36c5516f8fa}" SpecialFunc="None">
    <Declaration><![CDATA[  PROGRAM PRG_SP1K4
VAR
    fbMotionLensX: FB_MotionStage;
    fbMotionFoilX: FB_MotionStage;
    fbMotionZPX: FB_MotionStage;
    fbMotionZPY: FB_MotionStage;
    fbMotionZPZ: FB_MotionStage;
    fbMotionYAGX: FB_MotionStage;
    fbMotionYAGY: FB_MotionStage;
    fbMotionYAGZ: FB_MotionStage;
    fbMotionYAGR: FB_MotionStage;
    fbMotionTL1: FB_MotionStage;
    fbMotionTL2: FB_MotionStage;
    fbMotionTLX: FB_MotionStage;
    fbMotionFoilY: FB_MotionStage;

    {attribute 'TcLinkTo' := 'TIIB[LensX_EL1004]^Channel 1^Input'}
    bHallInput1 AT %I* : BOOL;

    {attribute 'TcLinkTo' := 'TIIB[LensX_EL1004]^Channel 2^Input'}
    bHallInput2 AT %I* : BOOL;

    {attribute 'TcLinkTo' := 'TIIB[SP1K4-TL1-EL1124]^Channel 1^Input'}
    bTL1High AT %I*: BOOL;
    nTL1HighCycles: UINT;
    {attribute 'TcLinkTo' := 'TIIB[SP1K4-TL1-EL1124]^Channel 2^Input'}
    bTL1Low AT %I*: BOOL;
    nTL1LowCycles: UINT;
    {attribute 'TcLinkTo' := 'TIIB[SP1K4-TL2-EL1124]^Channel 1^Input'}
    bTL2High AT %I*: BOOL;
    nTL2HighCycles: UINT;
    {attribute 'TcLinkTo' := 'TIIB[SP1K4-TL2-EL1124]^Channel 2^Input'}
    bTL2Low AT %I*: BOOL;
    nTL2LowCycles: UINT;

    nNumCyclesNeeded: UINT := 100;

    bInit: BOOL :=TRUE;

    // Placeholder, later this should be TRUE if the attenuator is in and FALSE otherwise
    bAttIn: BOOL;

    ////ZP states start
    {attribute 'pytmc' := '
        pv: SP1K4:FZP
    '}
    fbZPStates: FB_PositionStatePMPS3D;
    {attribute 'pytmc' := '
        pv: SP1K4:FZP:STATE:SET
        io: io
    '}
    zp_enumSet: ENUM_ZonePlate_States;
     {attribute 'pytmc' := '
        pv: SP1K4:FZP:STATE:GET
        io: io
    '}
    zp_enumGet: ENUM_ZonePlate_States;
    fbZPSetup: FB_StateSetupHelper;
    fbZPDefault: ST_PositionState := (
        fDelta:=1.5,
        fVelocity:=3.0,
 //       bMoveOk:=TRUE,
        bValid:=TRUE
    );
    aZPXStates: ARRAY[1..GeneralConstants.MAX_STATES] OF ST_PositionState;
    aZPYStates: ARRAY[1..GeneralConstants.MAX_STATES] OF ST_PositionState;
    aZPZStates: ARRAY[1..GeneralConstants.MAX_STATES] OF ST_PositionState;

    ////Solid-ATT states start
    {attribute 'pytmc' := '
        pv: SP1K4:ATT
    '}
    fbATTStates: FB_PositionStatePMPS2D;
    {attribute 'pytmc' := '
        pv: SP1K4:ATT:STATE:SET
        io: io
    '}
    att_enumSet: ENUM_SolidAttenuator_States;
     {attribute 'pytmc' := '
        pv: SP1K4:ATT:STATE:GET
        io: i
    '}
    att_enumGet: ENUM_SolidAttenuator_States;
    fbATTSetup: FB_StateSetupHelper;
    fbATTDefault: ST_PositionState := (
        fDelta:=2.0,
        fVelocity:=2,
//        bMoveOk:=TRUE,
        bValid:=TRUE
    );
    aATTXStates: ARRAY[1..GeneralConstants.MAX_STATES] OF ST_PositionState;
    aATTYStates: ARRAY[1..GeneralConstants.MAX_STATES] OF ST_PositionState;

    bPF1K4Out: BOOL;

    // SP1K4 RTD-01
    {attribute 'TcLinkTo' := '.iRaw := TIIB[SP1K4-EL3202-E9A]^RTD Inputs Channel 1^Value;
                              .bUnderrange := TIIB[SP1K4-EL3202-E9A]^RTD Inputs Channel 1^Status^Underrange;
                              .bOverrange := TIIB[SP1K4-EL3202-E9A]^RTD Inputs Channel 1^Status^Overrange;
                              .bError := TIIB[SP1K4-EL3202-E9A]^RTD Inputs Channel 1^Status^Error'}
    {attribute 'pytmc' := '
        pv: TMO:SPEC:RTD:01
        field: EGU C
        io: i
    '}
    SP1K4_ATT_RTD_01 : FB_CC_TempSensor;

    {attribute 'TcLinkTo' := '.iRaw := TIIB[SP1K4-EL3202-E9A]^RTD Inputs Channel 2^Value;
                              .bUnderrange := TIIB[SP1K4-EL3202-E9A]^RTD Inputs Channel 2^Status^Underrange;
                              .bOverrange := TIIB[SP1K4-EL3202-E9A]^RTD Inputs Channel 2^Status^Overrange;
                              .bError := TIIB[SP1K4-EL3202-E9A]^RTD Inputs Channel 2^Status^Error'}
    {attribute 'pytmc' := '
        pv: TMO:SPEC:RTD:02
        field: EGU C
        io: i
    '}
    SP1K4_ATT_RTD_02 : FB_CC_TempSensor;

    {attribute 'TcLinkTo' := '.iRaw := TIIB[EP3174-FWM-E2]^AI Standard Channel 2^Value'}
    {attribute 'pytmc' :='pv: TMO:SPEC'}
    fbFlowMeter: FB_FDQ_FlowMeter;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[ bPF1K4Out := GVL_TcGVL.ePF1K4State = E_WFS_States.OUT;
// Hardware Enable and fbMotionStage
//Lens X
Main.M32.bLimitForwardEnable := NOT bHallInput1;
Main.M32.bLimitBackwardEnable := NOT bHallInput2;
fbMotionLensX(stMotionStage:=Main.M32);


//Zone Plate
fbMotionZPX(stMotionStage:=Main.M34);
fbMotionZPY(stMotionStage:=Main.M35);
fbMotionZPZ(stMotionStage:=Main.M36);

fbZPSetup(stPositionState:=fbZPDefault, bSetDefault:=TRUE);
//swap several FZP targets for run 24 3-18-25
fbZPSetup(stPositionState:=aZPXStates[ENUM_ZonePlate_States.OUT], sName:='OUT', fPosition:=15);
fbZPSetup(stPositionState:=aZPYStates[ENUM_ZonePlate_States.OUT], sName:='OUT', fPosition:=-3.5);
fbZPSetup(stPositionState:=aZPZStates[ENUM_ZonePlate_States.OUT], sName:='OUT', fPosition:=0);

fbZPSetup(stPositionState:=aZPXStates[ENUM_ZonePlate_States.Target1b], sName:='YAG', fPosition:=49);
fbZPSetup(stPositionState:=aZPYStates[ENUM_ZonePlate_States.Target1b], sName:='YAG', fPosition:=0.65);
fbZPSetup(stPositionState:=aZPZStates[ENUM_ZonePlate_States.Target1b], sName:='YAG', fPosition:=0);

//paddle3
fbZPSetup(stPositionState:=aZPXStates[ENUM_ZonePlate_States.Target5a], sName:='FZP-260_1', fPosition:=81);
fbZPSetup(stPositionState:=aZPYStates[ENUM_ZonePlate_States.Target5a], sName:='FZP-260_1', fPosition:=-8.2);
fbZPSetup(stPositionState:=aZPZStates[ENUM_ZonePlate_States.Target5a], sName:='FZP-260_1', fPosition:=0);
//paddle is changed on 6-10-25
fbZPSetup(stPositionState:=aZPXStates[ENUM_ZonePlate_States.Target4b], sName:='FZP-400-800-dual_1', fPosition:=73);
fbZPSetup(stPositionState:=aZPYStates[ENUM_ZonePlate_States.Target4b], sName:='FZP-400-800-dual_1', fPosition:=0.65);
fbZPSetup(stPositionState:=aZPZStates[ENUM_ZonePlate_States.Target4b], sName:='FZP-400-800-dual_1', fPosition:=0);

fbZPSetup(stPositionState:=aZPXStates[ENUM_ZonePlate_States.Target5b], sName:='FZP-350_1', fPosition:=81);
fbZPSetup(stPositionState:=aZPYStates[ENUM_ZonePlate_States.Target5b], sName:='FZP-350_1', fPosition:=0.65);
fbZPSetup(stPositionState:=aZPZStates[ENUM_ZonePlate_States.Target5b], sName:='FZP-350_1', fPosition:=0);
//paddle is changed on 4-30-25
fbZPSetup(stPositionState:=aZPXStates[ENUM_ZonePlate_States.Target3b], sName:='FZP-806_1', fPosition:=65);
fbZPSetup(stPositionState:=aZPYStates[ENUM_ZonePlate_States.Target3b], sName:='FZP-806_1', fPosition:=0.65);
fbZPSetup(stPositionState:=aZPZStates[ENUM_ZonePlate_States.Target3b], sName:='FZP-806_1', fPosition:=0);
//paddle is changed on 4-30-25
fbZPSetup(stPositionState:=aZPXStates[ENUM_ZonePlate_States.Target2b], sName:='FZP-690_1', fPosition:=57);
fbZPSetup(stPositionState:=aZPYStates[ENUM_ZonePlate_States.Target2b], sName:='FZP-690_1', fPosition:=0.65);
fbZPSetup(stPositionState:=aZPZStates[ENUM_ZonePlate_States.Target2b], sName:='FZP-690_1', fPosition:=0);
//paddle is changed on 6-10-25
fbZPSetup(stPositionState:=aZPXStates[ENUM_ZonePlate_States.Target1a], sName:='FZP-400-800-dual_2', fPosition:=49);
fbZPSetup(stPositionState:=aZPYStates[ENUM_ZonePlate_States.Target1a], sName:='FZP-400-800-dual_2', fPosition:=-8.2);
fbZPSetup(stPositionState:=aZPZStates[ENUM_ZonePlate_States.Target1a], sName:='FZP-400-800-dual_2', fPosition:=0);

fbZPSetup(stPositionState:=aZPXStates[ENUM_ZonePlate_States.Target2a], sName:='FZP-530_2', fPosition:=57);
fbZPSetup(stPositionState:=aZPYStates[ENUM_ZonePlate_States.Target2a], sName:='FZP-530_2', fPosition:=-8.2);
fbZPSetup(stPositionState:=aZPZStates[ENUM_ZonePlate_States.Target2a], sName:='FZP-530_2', fPosition:=0);
// FZP-690-1 position X and Y are chanegd due to last TMO MRCO shift 3-7-2025
fbZPSetup(stPositionState:=aZPXStates[ENUM_ZonePlate_States.Target6b], sName:='FZP-262-524-dual_1', fPosition:=88.882);
fbZPSetup(stPositionState:=aZPYStates[ENUM_ZonePlate_States.Target6b], sName:='FZP-262-524-dual_1', fPosition:=-0.0144);
fbZPSetup(stPositionState:=aZPZStates[ENUM_ZonePlate_States.Target6b], sName:='FZP-262-524-dual_1', fPosition:=0);

fbZPSetup(stPositionState:=aZPXStates[ENUM_ZonePlate_States.Target7b], sName:='FZP-262-524-dual_2', fPosition:=97);
fbZPSetup(stPositionState:=aZPYStates[ENUM_ZonePlate_States.Target7b], sName:='FZP-262-524-dual_2', fPosition:=0.5);
fbZPSetup(stPositionState:=aZPZStates[ENUM_ZonePlate_States.Target7b], sName:='FZP-262-524-dual_2', fPosition:=0);

fbZPSetup(stPositionState:=aZPXStates[ENUM_ZonePlate_States.Target6a], sName:='FZP-400_1', fPosition:=89);
fbZPSetup(stPositionState:=aZPYStates[ENUM_ZonePlate_States.Target6a], sName:='FZP-400_1', fPosition:=-8.2);
fbZPSetup(stPositionState:=aZPZStates[ENUM_ZonePlate_States.Target6a], sName:='FZP-400_1', fPosition:=0);

fbZPSetup(stPositionState:=aZPXStates[ENUM_ZonePlate_States.Target7a], sName:='FZP-400_2', fPosition:=97);
fbZPSetup(stPositionState:=aZPYStates[ENUM_ZonePlate_States.Target7a], sName:='FZP-400_2', fPosition:=-8.2);
fbZPSetup(stPositionState:=aZPZStates[ENUM_ZonePlate_States.Target7a], sName:='FZP-400_2', fPosition:=0);

fbZPSetup(stPositionState:=aZPXStates[ENUM_ZonePlate_States.Target3a], sName:='FZP-613.5_1', fPosition:=65);
fbZPSetup(stPositionState:=aZPYStates[ENUM_ZonePlate_States.Target3a], sName:='FZP-613.5_1', fPosition:=-8.2);
fbZPSetup(stPositionState:=aZPZStates[ENUM_ZonePlate_States.Target3a], sName:='FZP-613.5_1', fPosition:=0);

fbZPSetup(stPositionState:=aZPXStates[ENUM_ZonePlate_States.Target4a], sName:='FZP-613.5_2', fPosition:=73);
fbZPSetup(stPositionState:=aZPYStates[ENUM_ZonePlate_States.Target4a], sName:='FZP-613.5_2', fPosition:=-8.2);
fbZPSetup(stPositionState:=aZPZStates[ENUM_ZonePlate_States.Target4a], sName:='FZP-613.5_2', fPosition:=0);


//paddle3
aZPXStates[ENUM_ZonePlate_States.OUT].bMoveOk := TRUE;
aZPXStates[ENUM_ZonePlate_States.Target1b].bMoveOk := bPF1K4Out;
aZPXStates[ENUM_ZonePlate_States.Target5a].bMoveOK := bPF1K4Out;
aZPXStates[ENUM_ZonePlate_States.Target4b].bMoveOK := bPF1K4Out;
aZPXStates[ENUM_ZonePlate_States.Target5b].bMoveOK := bPF1K4Out;
aZPXStates[ENUM_ZonePlate_States.Target3b].bMoveOK := bPF1K4Out;
aZPXStates[ENUM_ZonePlate_States.Target2b].bMoveOK := bPF1K4Out;
aZPXStates[ENUM_ZonePlate_States.Target1a].bMoveOK := bPF1K4Out;
aZPXStates[ENUM_ZonePlate_States.Target2a].bMoveOK := bPF1K4Out;
aZPXStates[ENUM_ZonePlate_States.Target6b].bMoveOK := bPF1K4Out;
aZPXStates[ENUM_ZonePlate_States.Target7b].bMoveOK := bPF1K4Out;
aZPXStates[ENUM_ZonePlate_States.Target6a].bMoveOK := bPF1K4Out;
aZPXStates[ENUM_ZonePlate_States.Target7a].bMoveOK := bPF1K4Out;
aZPXStates[ENUM_ZonePlate_States.Target3a].bMoveOK := bPF1K4Out;
aZPXStates[ENUM_ZonePlate_States.Target4a].bMoveOK := bPF1K4Out;

aZPYStates[ENUM_ZonePlate_States.OUT].bMoveOk := TRUE;
aZPYStates[ENUM_ZonePlate_States.Target1b].bMoveOk := bPF1K4Out;
aZPYStates[ENUM_ZonePlate_States.Target5a].bMoveOK := bPF1K4Out;
aZPYStates[ENUM_ZonePlate_States.Target4b].bMoveOK := bPF1K4Out;
aZPYStates[ENUM_ZonePlate_States.Target5b].bMoveOK := bPF1K4Out;
aZPYStates[ENUM_ZonePlate_States.Target3b].bMoveOK := bPF1K4Out;
aZPYStates[ENUM_ZonePlate_States.Target2b].bMoveOK := bPF1K4Out;
aZPYStates[ENUM_ZonePlate_States.Target1a].bMoveOK := bPF1K4Out;
aZPYStates[ENUM_ZonePlate_States.Target2a].bMoveOK := bPF1K4Out;
aZPYStates[ENUM_ZonePlate_States.Target6b].bMoveOK := bPF1K4Out;
aZPYStates[ENUM_ZonePlate_States.Target7b].bMoveOK := bPF1K4Out;
aZPYStates[ENUM_ZonePlate_States.Target6a].bMoveOK := bPF1K4Out;
aZPYStates[ENUM_ZonePlate_States.Target7a].bMoveOK := bPF1K4Out;
aZPYStates[ENUM_ZonePlate_States.Target3a].bMoveOK := bPF1K4Out;
aZPYStates[ENUM_ZonePlate_States.Target4a].bMoveOK := bPF1K4Out;

aZPZStates[ENUM_ZonePlate_States.OUT].bMoveOk := TRUE;
aZPZStates[ENUM_ZonePlate_States.Target1b].bMoveOk := bPF1K4Out;
aZPZStates[ENUM_ZonePlate_States.Target5a].bMoveOK := bPF1K4Out;
aZPZStates[ENUM_ZonePlate_States.Target4b].bMoveOK := bPF1K4Out;
aZPZStates[ENUM_ZonePlate_States.Target5b].bMoveOK := bPF1K4Out;
aZPZStates[ENUM_ZonePlate_States.Target3b].bMoveOK := bPF1K4Out;
aZPZStates[ENUM_ZonePlate_States.Target2b].bMoveOK := bPF1K4Out;
aZPZStates[ENUM_ZonePlate_States.Target1a].bMoveOK := bPF1K4Out;
aZPZStates[ENUM_ZonePlate_States.Target2a].bMoveOK := bPF1K4Out;
aZPZStates[ENUM_ZonePlate_States.Target6b].bMoveOK := bPF1K4Out;
aZPZStates[ENUM_ZonePlate_States.Target7b].bMoveOK := bPF1K4Out;
aZPZStates[ENUM_ZonePlate_States.Target6a].bMoveOK := bPF1K4Out;
aZPZStates[ENUM_ZonePlate_States.Target7a].bMoveOK := bPF1K4Out;
aZPZStates[ENUM_ZonePlate_States.Target3a].bMoveOK := bPF1K4Out;
aZPZStates[ENUM_ZonePlate_States.Target4a].bMoveOK := bPF1K4Out;

bAttIn := att_enumGet <> ENUM_SolidAttenuator_States.OUT AND  att_enumGet <> ENUM_SolidAttenuator_States.Unknown;


//paddle2
IF bAttIn THEN
    // Attenuator is in, pick the ATT_IN states
    aZPXStates[ENUM_ZonePlate_States.OUT].stPMPS.sPmpsState := 'SP1K4:FZP-OUT';
    aZPXStates[ENUM_ZonePlate_States.Target1b].stPMPS.sPmpsState := 'SP1K4:FZP-Target1b_ATT_IN';
    aZPXStates[ENUM_ZonePlate_States.Target5a].stPMPS.sPmpsState := 'SP1K4:FZP-Target5a_ATT_IN';
    aZPXStates[ENUM_ZonePlate_States.Target4b].stPMPS.sPmpsState := 'SP1K4:FZP-Target4b_ATT_IN';
    aZPXStates[ENUM_ZonePlate_States.Target5b].stPMPS.sPmpsState := 'SP1K4:FZP-Target5b_ATT_IN';
    aZPXStates[ENUM_ZonePlate_States.Target3b].stPMPS.sPmpsState := 'SP1K4:FZP-Target3b_ATT_IN';
    aZPXStates[ENUM_ZonePlate_States.Target2b].stPMPS.sPmpsState := 'SP1K4:FZP-Target2b_ATT_IN';
    aZPXStates[ENUM_ZonePlate_States.Target1a].stPMPS.sPmpsState := 'SP1K4:FZP-Target1a_ATT_IN';
    aZPXStates[ENUM_ZonePlate_States.Target2a].stPMPS.sPmpsState := 'SP1K4:FZP-Target2a_ATT_IN';
    aZPXStates[ENUM_ZonePlate_States.Target6b].stPMPS.sPmpsState := 'SP1K4:FZP-Target6b_ATT_IN';
    aZPXStates[ENUM_ZonePlate_States.Target7b].stPMPS.sPmpsState := 'SP1K4:FZP-Target7b_ATT_IN';
    aZPXStates[ENUM_ZonePlate_States.Target6a].stPMPS.sPmpsState := 'SP1K4:FZP-Target6a_ATT_IN';
    aZPXStates[ENUM_ZonePlate_States.Target7a].stPMPS.sPmpsState := 'SP1K4:FZP-Target7a_ATT_IN';
    aZPXStates[ENUM_ZonePlate_States.Target3a].stPMPS.sPmpsState := 'SP1K4:FZP-Target3a_ATT_IN';
    aZPXStates[ENUM_ZonePlate_States.Target4a].stPMPS.sPmpsState := 'SP1K4:FZP-Target4a_ATT_IN';

ELSE
    // Attenuator is out, pick the ATT_OUT states
    aZPXStates[ENUM_ZonePlate_States.OUT].stPMPS.sPmpsState := 'SP1K4:FZP-OUT';
    aZPXStates[ENUM_ZonePlate_States.Target1b].stPMPS.sPmpsState := 'SP1K4:FZP-Target1b_ATT_OUT';
    aZPXStates[ENUM_ZonePlate_States.Target5a].stPMPS.sPmpsState := 'SP1K4:FZP-Target5a_ATT_OUT';
    aZPXStates[ENUM_ZonePlate_States.Target4b].stPMPS.sPmpsState := 'SP1K4:FZP-Target4b_ATT_OUT';
    aZPXStates[ENUM_ZonePlate_States.Target5b].stPMPS.sPmpsState := 'SP1K4:FZP-Target5b_ATT_OUT';
    aZPXStates[ENUM_ZonePlate_States.Target3b].stPMPS.sPmpsState := 'SP1K4:FZP-Target3b_ATT_OUT';
    aZPXStates[ENUM_ZonePlate_States.Target2b].stPMPS.sPmpsState := 'SP1K4:FZP-Target2b_ATT_OUT';
    aZPXStates[ENUM_ZonePlate_States.Target1a].stPMPS.sPmpsState := 'SP1K4:FZP-Target1a_ATT_OUT';
    aZPXStates[ENUM_ZonePlate_States.Target2a].stPMPS.sPmpsState := 'SP1K4:FZP-Target2a_ATT_OUT';
    aZPXStates[ENUM_ZonePlate_States.Target6b].stPMPS.sPmpsState := 'SP1K4:FZP-Target6b_ATT_OUT';
    aZPXStates[ENUM_ZonePlate_States.Target7b].stPMPS.sPmpsState := 'SP1K4:FZP-Target7b_ATT_OUT';
    aZPXStates[ENUM_ZonePlate_States.Target6a].stPMPS.sPmpsState := 'SP1K4:FZP-Target6a_ATT_OUT';
    aZPXStates[ENUM_ZonePlate_States.Target7a].stPMPS.sPmpsState := 'SP1K4:FZP-Target7a_ATT_OUT';
    aZPXStates[ENUM_ZonePlate_States.Target3a].stPMPS.sPmpsState := 'SP1K4:FZP-Target3a_ATT_OUT';
    aZPXStates[ENUM_ZonePlate_States.Target4a].stPMPS.sPmpsState := 'SP1K4:FZP-Target4a_ATT_OUT';
END_IF

fbZPStates(
    stMotionStage1:=Main.M34,
    stMotionStage2:=Main.M35,
    stMotionStage3:=Main.M36,
    astPositionState1:=aZPXStates,
    astPositionState2:=aZPYStates,
    astPositionState3:=aZPZStates,
    eEnumSet:=zp_enumSet,
    eEnumGet:=zp_enumGet,
    fbFFHWO:=fbFastFaultOutput1,
    fbArbiter:=fbArbiter,
    bEnableMotion:=TRUE,
    bEnableBeamParams:=TRUE,
    bEnablePositionLimits:=TRUE,
    sDeviceName:='SP1K4:FZP',
    sTransitionKey:='SP1K4:FZP-TRANSITION',
);


// Foil X (Solid-ATT-X)
fbMotionFoilX(stMotionStage:=Main.M33);


// YAG
fbMotionYAGX(stMotionStage:=Main.M37);
fbMotionYAGY(stMotionStage:=Main.M38);
fbMotionYAGZ(stMotionStage:=Main.M39);
fbMotionYAGR(stMotionStage:=Main.M40);
// Thorlabs
fbMotionTL1(stMotionStage:=Main.M41);
fbMotionTL2(stMotionStage:=Main.M42);
//Thorlab-LenX
fbMotionTLX(stMotionStage:=Main.M43);
//FOIL Y (Solid-ATT-Y)
fbMotionFoilY(stMotionStage:=Main.M44);




// SP1K4-SOLID-ATT PMPS
fbATTSetup(stPositionState:=fbATTDefault, bSetDefault:=TRUE);
//update all targets positions and add four more targets on 9-9-25
fbATTSetup(stPositionState:=aATTXStates[ENUM_SolidAttenuator_States.OUT], sName:='OUT', fPosition:=-17.0);
fbATTSetup(stPositionState:=aATTYStates[ENUM_SolidAttenuator_States.OUT], sName:='OUT', fPosition:=2.3);

fbATTSetup(stPositionState:=aATTXStates[ENUM_SolidAttenuator_States.Target1], sName:='TARGET1', fPosition:=-31.5);
fbATTSetup(stPositionState:=aATTYStates[ENUM_SolidAttenuator_States.Target1], sName:='TARGET1', fPosition:=2.3);

fbATTSetup(stPositionState:=aATTXStates[ENUM_SolidAttenuator_States.Target2], sName:='TARGET2', fPosition:=-36.5);
fbATTSetup(stPositionState:=aATTYStates[ENUM_SolidAttenuator_States.Target2], sName:='TARGET2', fPosition:=2.3);

fbATTSetup(stPositionState:=aATTXStates[ENUM_SolidAttenuator_States.Target3], sName:='TARGET3', fPosition:=-41.5);
fbATTSetup(stPositionState:=aATTYStates[ENUM_SolidAttenuator_States.Target3], sName:='TARGET3', fPosition:=2.3);

fbATTSetup(stPositionState:=aATTXStates[ENUM_SolidAttenuator_States.Target4], sName:='TARGET4', fPosition:=-46.5);
fbATTSetup(stPositionState:=aATTYStates[ENUM_SolidAttenuator_States.Target4], sName:='TARGET4', fPosition:=2.3);

fbATTSetup(stPositionState:=aATTXStates[ENUM_SolidAttenuator_States.Target5], sName:='TARGET5', fPosition:=-51.5);
fbATTSetup(stPositionState:=aATTYStates[ENUM_SolidAttenuator_States.Target5], sName:='TARGET5', fPosition:=2.3);

fbATTSetup(stPositionState:=aATTXStates[ENUM_SolidAttenuator_States.Target6], sName:='TARGET6', fPosition:=-56.5);
fbATTSetup(stPositionState:=aATTYStates[ENUM_SolidAttenuator_States.Target6], sName:='TARGET6', fPosition:=2.3);

fbATTSetup(stPositionState:=aATTXStates[ENUM_SolidAttenuator_States.Target7], sName:='TARGET7', fPosition:=-61.5);
fbATTSetup(stPositionState:=aATTYStates[ENUM_SolidAttenuator_States.Target7], sName:='TARGET7', fPosition:=2.3);

fbATTSetup(stPositionState:=aATTXStates[ENUM_SolidAttenuator_States.Target8], sName:='TARGET8', fPosition:=-66.5);
fbATTSetup(stPositionState:=aATTYStates[ENUM_SolidAttenuator_States.Target8], sName:='TARGET8', fPosition:=2.3);

fbATTSetup(stPositionState:=aATTXStates[ENUM_SolidAttenuator_States.Target9], sName:='TARGET9', fPosition:=-71.5);
fbATTSetup(stPositionState:=aATTYStates[ENUM_SolidAttenuator_States.Target9], sName:='TARGET9', fPosition:=2.3);




aATTXStates[ENUM_SolidAttenuator_States.OUT].bMoveOk := TRUE;
aATTXStates[ENUM_SolidAttenuator_States.Target1].bMoveOk := bPF1K4Out;
aATTXStates[ENUM_SolidAttenuator_States.Target2].bMoveOk := bPF1K4Out;
aATTXStates[ENUM_SolidAttenuator_States.Target3].bMoveOk := bPF1K4Out;
aATTXStates[ENUM_SolidAttenuator_States.Target4].bMoveOk := bPF1K4Out;
aATTXStates[ENUM_SolidAttenuator_States.Target5].bMoveOk := bPF1K4Out;
// add four more targets on 9-9-25
aATTXStates[ENUM_SolidAttenuator_States.Target6].bMoveOk := bPF1K4Out;
aATTXStates[ENUM_SolidAttenuator_States.Target7].bMoveOk := bPF1K4Out;
aATTXStates[ENUM_SolidAttenuator_States.Target8].bMoveOk := bPF1K4Out;
aATTXStates[ENUM_SolidAttenuator_States.Target9].bMoveOk := bPF1K4Out;



aATTYStates[ENUM_SolidAttenuator_States.OUT].bMoveOk := TRUE;
aATTYStates[ENUM_SolidAttenuator_States.Target1].bMoveOk := bPF1K4Out;
aATTYStates[ENUM_SolidAttenuator_States.Target2].bMoveOk := bPF1K4Out;
aATTYStates[ENUM_SolidAttenuator_States.Target3].bMoveOk := bPF1K4Out;
aATTYStates[ENUM_SolidAttenuator_States.Target4].bMoveOk := bPF1K4Out;
aATTYStates[ENUM_SolidAttenuator_States.Target5].bMoveOk := bPF1K4Out;
//add four more targets on 9-925
aATTXStates[ENUM_SolidAttenuator_States.Target6].bMoveOk := bPF1K4Out;
aATTXStates[ENUM_SolidAttenuator_States.Target7].bMoveOk := bPF1K4Out;
aATTXStates[ENUM_SolidAttenuator_States.Target8].bMoveOk := bPF1K4Out;
aATTXStates[ENUM_SolidAttenuator_States.Target9].bMoveOk := bPF1K4Out;





aATTXStates[ENUM_SolidAttenuator_States.OUT].stPMPS.sPmpsState := 'SP1K4:ATT-OUT';
aATTXStates[ENUM_SolidAttenuator_States.Target1].stPMPS.sPmpsState := 'SP1K4:ATT-TARGET1';
aATTXStates[ENUM_SolidAttenuator_States.Target2].stPMPS.sPmpsState := 'SP1K4:ATT-TARGET2';
aATTXStates[ENUM_SolidAttenuator_States.Target3].stPMPS.sPmpsState := 'SP1K4:ATT-TARGET3';
aATTXStates[ENUM_SolidAttenuator_States.Target4].stPMPS.sPmpsState := 'SP1K4:ATT-TARGET4';
aATTXStates[ENUM_SolidAttenuator_States.Target5].stPMPS.sPmpsState := 'SP1K4:ATT-TARGET5';
//add four more targets on 9-9-25
aATTXStates[ENUM_SolidAttenuator_States.Target6].stPMPS.sPmpsState := 'SP1K4:ATT-TARGET6';
aATTXStates[ENUM_SolidAttenuator_States.Target7].stPMPS.sPmpsState := 'SP1K4:ATT-TARGET7';
aATTXStates[ENUM_SolidAttenuator_States.Target8].stPMPS.sPmpsState := 'SP1K4:ATT-TARGET8';
aATTXStates[ENUM_SolidAttenuator_States.Target9].stPMPS.sPmpsState := 'SP1K4:ATT-TARGET9';


fbATTStates(
    stMotionStage1:=Main.M33,
    stMotionStage2:=Main.M44,
    astPositionState1:=aATTXStates,
    astPositionState2:=aATTYStates,
    eEnumSet:=att_enumSet,
    eEnumGet:=att_enumGet,
    fbFFHWO:=fbFastFaultOutput1,
    fbArbiter:=fbArbiter,
    bEnableMotion:=TRUE,
    bEnableBeamParams:=TRUE,
    bEnablePositionLimits:=TRUE,
    sDeviceName:='SP1K4:ATT',
    sTransitionKey:='SP1K4:ATT-TRANSITION',
);








IF NOT bTL1High THEN
    nTL1HighCycles := MIN(nTL1HighCycles + 1, nNumCyclesNeeded);
ELSE
    nTL1HighCycles := 0;
END_IF
IF NOT bTL1Low THEN
    nTL1LowCycles := MIN(nTL1LowCycles + 1, nNumCyclesNeeded);
ELSE
    nTL1LowCycles := 0;
END_IF
IF NOT bTL2High THEN
    nTL2HighCycles := MIN(nTL2HighCycles + 1, nNumCyclesNeeded);
ELSE
    nTL2HighCycles := 0;
END_IF
IF NOT bTL2Low THEN
    nTL2LowCycles := MIN(nTL2LowCycles + 1, nNumCyclesNeeded);
ELSE
    nTL2LowCycles := 0;
END_IF

Main.M41.bLimitForwardEnable := nTL1HighCycles < nNumCyclesNeeded;
Main.M41.bLimitBackwardEnable := nTL1LowCycles < nNumCyclesNeeded;
Main.M42.bLimitForwardEnable := nTL2HighCycles < nNumCyclesNeeded;
Main.M42.bLimitBackwardEnable := nTL2LowCycles < nNumCyclesNeeded;
Main.M43.bLimitBackwardEnable := True;
Main.M43.bLimitForwardEnable := True;

GVL_TcGVL.eSP1K4FZP := zp_enumGet;
GVL_TcGVL.eSP1K4ATT := att_enumGet;

SP1K4_ATT_RTD_01(
    fResolution:=0.01,
    fFaultThreshold:=fbAttStates.stDbStateParams.stReactiveParams.nTempSP,
    bVeto:=att_enumGet = ENUM_SolidAttenuator_States.OUT,
    sDevName:='SP1K4:ATT',
    io_fbFFHWO:=fbFastFaultOutput1,

);
SP1K4_ATT_RTD_02(
    fResolution:=0.01,
    fFaultThreshold:=fbAttStates.stDbStateParams.stReactiveParams.nTempSP,
    bVeto:=att_enumGet = ENUM_SolidAttenuator_States.OUT,
    sDevName:='SP1K4:ATT',
    io_fbFFHWO:=fbFastFaultOutput1,
);

fbFlowMeter();]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>